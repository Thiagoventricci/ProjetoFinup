/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package VIEW;

import DAO.PessoaFisicaDAO;
import DAO.PessoaJuridicaDAO;
import DTO.PessoaFisicaDTO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author thiag
 */
public class Comprovantes extends javax.swing.JInternalFrame {

    /**
     * Creates new form Comprovantes
     */
    public Comprovantes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 255, 204));
        setMaximumSize(new java.awt.Dimension(678, 456));
        setMinimumSize(new java.awt.Dimension(678, 456));
        setPreferredSize(new java.awt.Dimension(678, 456));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Remetente", "Valor", "Destinatário", "Data da transferência", "Tipo_T"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setEnabled(false);
        jScrollPane2.setViewportView(jTable1);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Conta_R:", "Agência_R:", "Valor:", "Conta_D:", "Agência_D:", "Data_T:", "Tipo_T:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void listarValoresPIX(String cpf) {
              
        
                try {
                
                PessoaFisicaDAO objPessoaDAO = new PessoaFisicaDAO();
                PessoaFisicaDTO objpdto = new PessoaFisicaDTO();
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                  
                ArrayList<PessoaFisicaDTO> lista = objPessoaDAO.HistoricoPIX(cpf);
               
                for (int i = 0; i < lista.size(); i++) {
               
                    
                    model.addRow(new Object[]{
                        lista.get(i).getTitularHistoricoR(),
                        "R$ " + lista.get(i).getValorPixTabela(),
                        lista.get(i).getTitularHistoricoD(),
                        lista.get(i).getData_transferencia_pix(),
                        lista.get(i).getTipo_transferenciaPix()
                    });
                }
                } catch (Exception erro) {
                JOptionPane.showMessageDialog(null, "Erro no listavaloresPIX" + erro);
            }

    }
    
    public void listarValoresTED(String cpf) {
            try {
                PessoaFisicaDAO objUsuarioDAO = new PessoaFisicaDAO();
                PessoaFisicaDTO objpdto = new PessoaFisicaDTO();

                DefaultTableModel model = (DefaultTableModel) jTable3.getModel();

                ArrayList<PessoaFisicaDTO> lista = objUsuarioDAO.HistoricoTED(cpf);

                for (int i = 0; i < lista.size(); i++) {
                    model.addRow(new Object[]{
                        " " + lista.get(i).getConta(),
                        " " + lista.get(i).getAgencia(),
                        "R$ " + lista.get(i).getValorTed(),
                        " " + lista.get(i).getContaTabelaD(),
                        " " + lista.get(i).getAgenciaTabelaD(),
                        " " + lista.get(i).getData_transferencia_ted(),
                            lista.get(i).getTipo_transferenciaTed()
                    
                    });
                }

            } catch (Exception erro) {
                JOptionPane.showMessageDialog(null, "Erro no listavaloresTED" + erro);
            }
        }
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
}
